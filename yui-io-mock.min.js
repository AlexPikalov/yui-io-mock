YUI.add("io-mock",function(a){function b(){var a=this;a.onabort=null,a.onerror=null,a.onload=null,a.onloadend=null,a.onloadstart=null,a.onprogress=null,a.onreadystatechange=null,a.ontimeout=null,a.readyState=c.UNSET,a.response="",a.responseText="",a.responseType="",a.responseXML=null,a.status=0,a.statusText="",a.timeout=0,a._responseHeaders={},a._requestHeaders={},a._request=null,a._response=null}a.IOMock={_callbacks:[],when:function(a,b){if(!a||"string"!=typeof a||!(a.multiline&&a.ignoreCase&&a.global))throw new Error("URL is required and should be a string or regexp");var c={method:b||"GET",url:"string"==typeof a?new RegExp(a):a,passedThrough:!1,respond:function(a){if(this.passedThrough)throw new Error("");this.resultFactory=a},passThrough:function(){this.passedThrough=!0}};return this._callbacks.push(c),c},findCallbacks:function(a,b){var c,d=this._callbacks.length,e=[];for(c=0;d>c;c++){var f=this._callbacks[c];f.method===a&&f.url.test(b)&&e.push(f)}return e},mockOriginalXHR:function(){var c,d=this,e=a.io;d._originalXhrTransport=a.IO.transports.xhr,a.io=function(f,g){var h=d.findCallbacks(g.method||"GET",f).pop().passedThrough;a.IO.transports.xhr=h?d._originalXhrTransport:function(){return new b};for(c in e)e.hasOwnProperty(c)&&!a.io[c]&&(a.io[c]=e[c]);e(f,g)}}},a.IOMock.mockOriginalXHR();var c={UNSET:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4};b.prototype._invokeOnreadystatechange=function(){"function"==typeof this.onreadystatechange&&this.onreadystatechange()},b.prototype.abort=function(){},b.prototype.getAllResponseHeaders=function(){return this._response.headers},b.prototype.getResponseHeader=function(a){return this._request.headers[a]},b.prototype.open=function(a,b,d,e,f){var g=/(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/,h=this;if(!a||!b)throw new Error('Both parameters "method" and "url" are required');if(!g.test(b))throw new Error("URL should has HTTP(S) format");h._request={};var i=h._request;i.method=a.toUpperCase(),i.url=b,i.async=d||!0,i.user=e||"",i.password=f||"",h.readyState=c.OPENED,h._invokeOnreadystatechange()},b.prototype.overrideMimeType=function(){},b.prototype.send=function(b){function d(a){a.headers=a.headers||{};var b,d=a.headers;d["Content-Type"]="application/json";for(b in a.headers)a.headers.hasOwnProperty(b)&&(d[b]=a.headers[b]);e.readyState=c.HEADERS_RECEIVED,e._invokeOnreadystatechange(),e.readyState=c.LOADING,e.onloadstart&&e.onloadstart(),e.onloadend&&e.onloadend(),e.onload&&e.onload(),e._invokeOnreadystatechange(),e._response=a,e.status=a.status||200,e.responseType=a.type||"text",e.responseText=a.data||"",e.readyState=a.readyState||c.DONE,e._invokeOnreadystatechange()}var e=this;if(e._request){if("string"!=typeof b)throw new Error("Data should be a string");e._request.data=b;var f=a.IOMock.findCallbacks(e._request.method,e._request.url).pop();if(!f)throw new Error("There are no callbacks matching the request");e._request.async?setTimeout(function(){e._result={},f.resultFactory(e._request,e._result),d(e._result)},0):(e._result={},f.resultFactory(e._request,e._result),d(e._result))}},b.prototype.setRequestHeader=function(a,b){var c=this;c._request.headers=c._request.headers||{},c._request.headers[a]=b}},"0.0.0",{requires:["io","log"]});
//# sourceMappingURL=yui-io-mock.map